{"version":3,"file":"component---src-templates-stage-template-tsx-6af399d3fdf54edbd7f5.js","mappings":"iLAGe,SAASA,EAAT,GAA6B,IAAX,MAAEC,GAAS,EAC1C,OACE,gCACGA,EAAMC,KAAKC,GACV,uBAAKC,UAAU,gGACb,uBAAKA,UAAU,0CACb,4BAAOD,EAAKE,KAAKC,OAAOC,OAE1B,gBAAC,EAAAC,KAAD,CAAMC,GAAE,IAAMN,EAAKE,KAAKC,OAAOI,MAC7B,sBAAIN,UAAU,kBAAkBD,EAAKE,KAAKC,OAAOK,QAEnD,qBAAGP,UAAU,uBACVD,EAAKE,KAAKO,SAAWT,EAAKE,KAAKQ,YAAYC,aAE9C,yBAAOV,UAAU,0FACdD,EAAKE,KAAKC,OAAOS,a,wEC+C9B,UAtDsB,IAAkC,IAAjC,KAAEC,EAAF,YAAQC,GAAyB,EACtD,MAAM,MAAEhB,GAAUe,EAAKE,QACjB,MACJH,EADI,KAEJL,EAFI,YAGJS,EAHI,aAIJC,EAJI,aAKJC,EALI,YAMJC,EANI,YAOJC,GACEN,EACEO,EACJL,EAAc,EACPJ,EADP,WACuBI,EADvB,MACwCM,EAAAA,WACjCV,EAFP,MAEkBU,EAAAA,WAEpB,OACE,gBAAC,IAAD,CAAQd,MAAOa,GACb,uBAAKpB,UAAU,uCACb,sBAAIA,UAAU,gEACXW,IAGL,gBAAC,IAAD,CAAUd,MAAOA","sources":["webpack://obsidian-starter/./src/components/ListNote.tsx","webpack://obsidian-starter/./src/templates/stage-template.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nexport default function ListNote({ edges }) {\n  return (\n    <>\n      {edges.map((edge) => (\n        <div className=\"col-span-12 md:col-span-6 my-2 py-4 md:my-0 border-color-slate-200 border-b last:border-none\">\n          <div className=\"items-center uppercase leading-relaxed\">\n            <time>{edge.node.fields.date}</time>\n          </div>\n          <Link to={`/${edge.node.fields.slug}`}>\n            <h2 className=\"underline my-2\">{edge.node.fields.title}</h2>\n          </Link>\n          <p className=\"mb-2 text-slate-600\">\n            {edge.node.excerpt || edge.node.frontmatter.description}\n          </p>\n          <small className=\"bg-green-50 text-green-700 text-xs tracking-normal uppercase rounded-lg px-2 py-1 my-2\">\n            {edge.node.fields.stage}\n          </small>\n        </div>\n      ))}\n    </>\n  );\n}\n","import Layout from \"@/components/Layout\";\nimport React from \"react\";\nimport ListNote from \"@/components/ListNote\";\nimport { graphql } from \"gatsby\";\nimport { SITE_TITLE } from \"../../config\";\n\ntype Props = {\n  data: AllMdx;\n  pageContext: PageContext;\n};\n\nconst StageTemplate = ({ data, pageContext }: Props) => {\n  const { edges } = data.allMdx;\n  const {\n    stage,\n    slug,\n    currentPage,\n    prevPagePath,\n    nextPagePath,\n    hasPrevPage,\n    hasNextPage,\n  } = pageContext;\n  const pageTitle =\n    currentPage > 0\n      ? `${stage} - Page ${currentPage} - ${SITE_TITLE}`\n      : `${stage} - ${SITE_TITLE}`;\n\n  return (\n    <Layout title={pageTitle}>\n      <div className=\"my-2 py-4 border-b border-slate-200\">\n        <h1 className=\"capitalize inline-block mr-2 text-5xl md:text-7xl font-black\">\n          {stage}\n        </h1>\n      </div>\n      <ListNote edges={edges} />\n      {/* {(hasPrevPage || hasNextPage) && (\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        />\n      )} */}\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query StagePage($stage: String) {\n    allMdx(\n      filter: {\n        frontmatter: { publish: { ne: false } }\n        fields: { stage: { eq: $stage } }\n      }\n      sort: { order: DESC, fields: fields___date }\n    ) {\n      edges {\n        node {\n          ...postList\n        }\n      }\n    }\n  }\n`;\n\nexport default StageTemplate;\n"],"names":["ListNote","edges","map","edge","className","node","fields","date","Link","to","slug","title","excerpt","frontmatter","description","stage","data","pageContext","allMdx","currentPage","prevPagePath","nextPagePath","hasPrevPage","hasNextPage","pageTitle","SITE_TITLE"],"sourceRoot":""}